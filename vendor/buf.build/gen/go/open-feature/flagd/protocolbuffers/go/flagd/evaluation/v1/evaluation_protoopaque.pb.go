//*
// Flag evaluation API
//
// This proto forms the basis of a flag-evaluation API.
// It supports single and bulk evaluation RPCs, and flags of various types, as well as establishing a stream for getting notifications about changes in a flag definition.
// It supports the inclusion of a "context" with each evaluation, which may contain arbitrary attributes relevant to flag evaluation.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: flagd/evaluation/v1/evaluation.proto

//go:build protoopaque

package evaluationv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request body for bulk flag evaluation, used by the ResolveAll rpc.
type ResolveAllRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Context *structpb.Struct       `protobuf:"bytes,1,opt,name=context,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResolveAllRequest) Reset() {
	*x = ResolveAllRequest{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveAllRequest) ProtoMessage() {}

func (x *ResolveAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveAllRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Context
	}
	return nil
}

func (x *ResolveAllRequest) SetContext(v *structpb.Struct) {
	x.xxx_hidden_Context = v
}

func (x *ResolveAllRequest) HasContext() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Context != nil
}

func (x *ResolveAllRequest) ClearContext() {
	x.xxx_hidden_Context = nil
}

type ResolveAllRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
	Context *structpb.Struct
}

func (b0 ResolveAllRequest_builder) Build() *ResolveAllRequest {
	m0 := &ResolveAllRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Context = b.Context
	return m0
}

// Response body for bulk flag evaluation, used by the ResolveAll rpc.
type ResolveAllResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Flags    map[string]*AnyFlag    `protobuf:"bytes,1,rep,name=flags,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Metadata *structpb.Struct       `protobuf:"bytes,2,opt,name=metadata,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ResolveAllResponse) Reset() {
	*x = ResolveAllResponse{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveAllResponse) ProtoMessage() {}

func (x *ResolveAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveAllResponse) GetFlags() map[string]*AnyFlag {
	if x != nil {
		return x.xxx_hidden_Flags
	}
	return nil
}

func (x *ResolveAllResponse) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ResolveAllResponse) SetFlags(v map[string]*AnyFlag) {
	x.xxx_hidden_Flags = v
}

func (x *ResolveAllResponse) SetMetadata(v *structpb.Struct) {
	x.xxx_hidden_Metadata = v
}

func (x *ResolveAllResponse) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ResolveAllResponse) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ResolveAllResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Object structure describing the evaluated flags for the provided context.
	Flags map[string]*AnyFlag
	// Metadata for the bulk evaluation
	Metadata *structpb.Struct
}

func (b0 ResolveAllResponse_builder) Build() *ResolveAllResponse {
	m0 := &ResolveAllResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Flags = b.Flags
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// A variant type flag response.
type AnyFlag struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Reason   string                 `protobuf:"bytes,1,opt,name=reason,proto3"`
	xxx_hidden_Variant  string                 `protobuf:"bytes,2,opt,name=variant,proto3"`
	xxx_hidden_Value    isAnyFlag_Value        `protobuf_oneof:"value"`
	xxx_hidden_Metadata *structpb.Struct       `protobuf:"bytes,7,opt,name=metadata,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AnyFlag) Reset() {
	*x = AnyFlag{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnyFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyFlag) ProtoMessage() {}

func (x *AnyFlag) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AnyFlag) GetReason() string {
	if x != nil {
		return x.xxx_hidden_Reason
	}
	return ""
}

func (x *AnyFlag) GetVariant() string {
	if x != nil {
		return x.xxx_hidden_Variant
	}
	return ""
}

func (x *AnyFlag) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Value.(*anyFlag_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *AnyFlag) GetStringValue() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Value.(*anyFlag_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *AnyFlag) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Value.(*anyFlag_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *AnyFlag) GetObjectValue() *structpb.Struct {
	if x != nil {
		if x, ok := x.xxx_hidden_Value.(*anyFlag_ObjectValue); ok {
			return x.ObjectValue
		}
	}
	return nil
}

func (x *AnyFlag) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *AnyFlag) SetReason(v string) {
	x.xxx_hidden_Reason = v
}

func (x *AnyFlag) SetVariant(v string) {
	x.xxx_hidden_Variant = v
}

func (x *AnyFlag) SetBoolValue(v bool) {
	x.xxx_hidden_Value = &anyFlag_BoolValue{v}
}

func (x *AnyFlag) SetStringValue(v string) {
	x.xxx_hidden_Value = &anyFlag_StringValue{v}
}

func (x *AnyFlag) SetDoubleValue(v float64) {
	x.xxx_hidden_Value = &anyFlag_DoubleValue{v}
}

func (x *AnyFlag) SetObjectValue(v *structpb.Struct) {
	if v == nil {
		x.xxx_hidden_Value = nil
		return
	}
	x.xxx_hidden_Value = &anyFlag_ObjectValue{v}
}

func (x *AnyFlag) SetMetadata(v *structpb.Struct) {
	x.xxx_hidden_Metadata = v
}

func (x *AnyFlag) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *AnyFlag) HasBoolValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Value.(*anyFlag_BoolValue)
	return ok
}

func (x *AnyFlag) HasStringValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Value.(*anyFlag_StringValue)
	return ok
}

func (x *AnyFlag) HasDoubleValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Value.(*anyFlag_DoubleValue)
	return ok
}

func (x *AnyFlag) HasObjectValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Value.(*anyFlag_ObjectValue)
	return ok
}

func (x *AnyFlag) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *AnyFlag) ClearValue() {
	x.xxx_hidden_Value = nil
}

func (x *AnyFlag) ClearBoolValue() {
	if _, ok := x.xxx_hidden_Value.(*anyFlag_BoolValue); ok {
		x.xxx_hidden_Value = nil
	}
}

func (x *AnyFlag) ClearStringValue() {
	if _, ok := x.xxx_hidden_Value.(*anyFlag_StringValue); ok {
		x.xxx_hidden_Value = nil
	}
}

func (x *AnyFlag) ClearDoubleValue() {
	if _, ok := x.xxx_hidden_Value.(*anyFlag_DoubleValue); ok {
		x.xxx_hidden_Value = nil
	}
}

func (x *AnyFlag) ClearObjectValue() {
	if _, ok := x.xxx_hidden_Value.(*anyFlag_ObjectValue); ok {
		x.xxx_hidden_Value = nil
	}
}

func (x *AnyFlag) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

const AnyFlag_Value_not_set_case case_AnyFlag_Value = 0
const AnyFlag_BoolValue_case case_AnyFlag_Value = 3
const AnyFlag_StringValue_case case_AnyFlag_Value = 4
const AnyFlag_DoubleValue_case case_AnyFlag_Value = 5
const AnyFlag_ObjectValue_case case_AnyFlag_Value = 6

func (x *AnyFlag) WhichValue() case_AnyFlag_Value {
	if x == nil {
		return AnyFlag_Value_not_set_case
	}
	switch x.xxx_hidden_Value.(type) {
	case *anyFlag_BoolValue:
		return AnyFlag_BoolValue_case
	case *anyFlag_StringValue:
		return AnyFlag_StringValue_case
	case *anyFlag_DoubleValue:
		return AnyFlag_DoubleValue_case
	case *anyFlag_ObjectValue:
		return AnyFlag_ObjectValue_case
	default:
		return AnyFlag_Value_not_set_case
	}
}

type AnyFlag_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
	Reason string
	// The variant name of the returned flag value.
	Variant string
	// The response value of the boolean flag evaluation, will be unset in the case of error.

	// Fields of oneof xxx_hidden_Value:
	BoolValue   *bool
	StringValue *string
	DoubleValue *float64
	ObjectValue *structpb.Struct
	// -- end of xxx_hidden_Value
	// Metadata for this evaluation
	Metadata *structpb.Struct
}

func (b0 AnyFlag_builder) Build() *AnyFlag {
	m0 := &AnyFlag{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Reason = b.Reason
	x.xxx_hidden_Variant = b.Variant
	if b.BoolValue != nil {
		x.xxx_hidden_Value = &anyFlag_BoolValue{*b.BoolValue}
	}
	if b.StringValue != nil {
		x.xxx_hidden_Value = &anyFlag_StringValue{*b.StringValue}
	}
	if b.DoubleValue != nil {
		x.xxx_hidden_Value = &anyFlag_DoubleValue{*b.DoubleValue}
	}
	if b.ObjectValue != nil {
		x.xxx_hidden_Value = &anyFlag_ObjectValue{b.ObjectValue}
	}
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

type case_AnyFlag_Value protoreflect.FieldNumber

func (x case_AnyFlag_Value) String() string {
	md := file_flagd_evaluation_v1_evaluation_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isAnyFlag_Value interface {
	isAnyFlag_Value()
}

type anyFlag_BoolValue struct {
	BoolValue bool `protobuf:"varint,3,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type anyFlag_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type anyFlag_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,5,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type anyFlag_ObjectValue struct {
	ObjectValue *structpb.Struct `protobuf:"bytes,6,opt,name=object_value,json=objectValue,proto3,oneof"`
}

func (*anyFlag_BoolValue) isAnyFlag_Value() {}

func (*anyFlag_StringValue) isAnyFlag_Value() {}

func (*anyFlag_DoubleValue) isAnyFlag_Value() {}

func (*anyFlag_ObjectValue) isAnyFlag_Value() {}

// Request body for boolean flag evaluation, used by the ResolveBoolean rpc.
type ResolveBooleanRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FlagKey string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3"`
	xxx_hidden_Context *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResolveBooleanRequest) Reset() {
	*x = ResolveBooleanRequest{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveBooleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveBooleanRequest) ProtoMessage() {}

func (x *ResolveBooleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveBooleanRequest) GetFlagKey() string {
	if x != nil {
		return x.xxx_hidden_FlagKey
	}
	return ""
}

func (x *ResolveBooleanRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Context
	}
	return nil
}

func (x *ResolveBooleanRequest) SetFlagKey(v string) {
	x.xxx_hidden_FlagKey = v
}

func (x *ResolveBooleanRequest) SetContext(v *structpb.Struct) {
	x.xxx_hidden_Context = v
}

func (x *ResolveBooleanRequest) HasContext() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Context != nil
}

func (x *ResolveBooleanRequest) ClearContext() {
	x.xxx_hidden_Context = nil
}

type ResolveBooleanRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Flag key of the requested flag.
	FlagKey string
	// Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
	Context *structpb.Struct
}

func (b0 ResolveBooleanRequest_builder) Build() *ResolveBooleanRequest {
	m0 := &ResolveBooleanRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FlagKey = b.FlagKey
	x.xxx_hidden_Context = b.Context
	return m0
}

// Response body for boolean flag evaluation. used by the ResolveBoolean rpc.
type ResolveBooleanResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Value    bool                   `protobuf:"varint,1,opt,name=value,proto3"`
	xxx_hidden_Reason   string                 `protobuf:"bytes,2,opt,name=reason,proto3"`
	xxx_hidden_Variant  string                 `protobuf:"bytes,3,opt,name=variant,proto3"`
	xxx_hidden_Metadata *structpb.Struct       `protobuf:"bytes,4,opt,name=metadata,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ResolveBooleanResponse) Reset() {
	*x = ResolveBooleanResponse{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveBooleanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveBooleanResponse) ProtoMessage() {}

func (x *ResolveBooleanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveBooleanResponse) GetValue() bool {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return false
}

func (x *ResolveBooleanResponse) GetReason() string {
	if x != nil {
		return x.xxx_hidden_Reason
	}
	return ""
}

func (x *ResolveBooleanResponse) GetVariant() string {
	if x != nil {
		return x.xxx_hidden_Variant
	}
	return ""
}

func (x *ResolveBooleanResponse) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ResolveBooleanResponse) SetValue(v bool) {
	x.xxx_hidden_Value = v
}

func (x *ResolveBooleanResponse) SetReason(v string) {
	x.xxx_hidden_Reason = v
}

func (x *ResolveBooleanResponse) SetVariant(v string) {
	x.xxx_hidden_Variant = v
}

func (x *ResolveBooleanResponse) SetMetadata(v *structpb.Struct) {
	x.xxx_hidden_Metadata = v
}

func (x *ResolveBooleanResponse) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ResolveBooleanResponse) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ResolveBooleanResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The response value of the boolean flag evaluation, will be unset in the case of error.
	Value bool
	// The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
	Reason string
	// The variant name of the returned flag value.
	Variant string
	// Metadata for this evaluation
	Metadata *structpb.Struct
}

func (b0 ResolveBooleanResponse_builder) Build() *ResolveBooleanResponse {
	m0 := &ResolveBooleanResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Value = b.Value
	x.xxx_hidden_Reason = b.Reason
	x.xxx_hidden_Variant = b.Variant
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Request body for string flag evaluation, used by the ResolveString rpc.
type ResolveStringRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FlagKey string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3"`
	xxx_hidden_Context *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResolveStringRequest) Reset() {
	*x = ResolveStringRequest{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveStringRequest) ProtoMessage() {}

func (x *ResolveStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveStringRequest) GetFlagKey() string {
	if x != nil {
		return x.xxx_hidden_FlagKey
	}
	return ""
}

func (x *ResolveStringRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Context
	}
	return nil
}

func (x *ResolveStringRequest) SetFlagKey(v string) {
	x.xxx_hidden_FlagKey = v
}

func (x *ResolveStringRequest) SetContext(v *structpb.Struct) {
	x.xxx_hidden_Context = v
}

func (x *ResolveStringRequest) HasContext() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Context != nil
}

func (x *ResolveStringRequest) ClearContext() {
	x.xxx_hidden_Context = nil
}

type ResolveStringRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Flag key of the requested flag.
	FlagKey string
	// Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
	Context *structpb.Struct
}

func (b0 ResolveStringRequest_builder) Build() *ResolveStringRequest {
	m0 := &ResolveStringRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FlagKey = b.FlagKey
	x.xxx_hidden_Context = b.Context
	return m0
}

// Response body for string flag evaluation. used by the ResolveString rpc.
type ResolveStringResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Value    string                 `protobuf:"bytes,1,opt,name=value,proto3"`
	xxx_hidden_Reason   string                 `protobuf:"bytes,2,opt,name=reason,proto3"`
	xxx_hidden_Variant  string                 `protobuf:"bytes,3,opt,name=variant,proto3"`
	xxx_hidden_Metadata *structpb.Struct       `protobuf:"bytes,4,opt,name=metadata,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ResolveStringResponse) Reset() {
	*x = ResolveStringResponse{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveStringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveStringResponse) ProtoMessage() {}

func (x *ResolveStringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveStringResponse) GetValue() string {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return ""
}

func (x *ResolveStringResponse) GetReason() string {
	if x != nil {
		return x.xxx_hidden_Reason
	}
	return ""
}

func (x *ResolveStringResponse) GetVariant() string {
	if x != nil {
		return x.xxx_hidden_Variant
	}
	return ""
}

func (x *ResolveStringResponse) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ResolveStringResponse) SetValue(v string) {
	x.xxx_hidden_Value = v
}

func (x *ResolveStringResponse) SetReason(v string) {
	x.xxx_hidden_Reason = v
}

func (x *ResolveStringResponse) SetVariant(v string) {
	x.xxx_hidden_Variant = v
}

func (x *ResolveStringResponse) SetMetadata(v *structpb.Struct) {
	x.xxx_hidden_Metadata = v
}

func (x *ResolveStringResponse) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ResolveStringResponse) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ResolveStringResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The response value of the string flag evaluation, will be unset in the case of error.
	Value string
	// The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
	Reason string
	// The variant name of the returned flag value.
	Variant string
	// Metadata for this evaluation
	Metadata *structpb.Struct
}

func (b0 ResolveStringResponse_builder) Build() *ResolveStringResponse {
	m0 := &ResolveStringResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Value = b.Value
	x.xxx_hidden_Reason = b.Reason
	x.xxx_hidden_Variant = b.Variant
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Request body for float flag evaluation, used by the ResolveFloat rpc.
type ResolveFloatRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FlagKey string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3"`
	xxx_hidden_Context *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResolveFloatRequest) Reset() {
	*x = ResolveFloatRequest{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveFloatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveFloatRequest) ProtoMessage() {}

func (x *ResolveFloatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveFloatRequest) GetFlagKey() string {
	if x != nil {
		return x.xxx_hidden_FlagKey
	}
	return ""
}

func (x *ResolveFloatRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Context
	}
	return nil
}

func (x *ResolveFloatRequest) SetFlagKey(v string) {
	x.xxx_hidden_FlagKey = v
}

func (x *ResolveFloatRequest) SetContext(v *structpb.Struct) {
	x.xxx_hidden_Context = v
}

func (x *ResolveFloatRequest) HasContext() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Context != nil
}

func (x *ResolveFloatRequest) ClearContext() {
	x.xxx_hidden_Context = nil
}

type ResolveFloatRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Flag key of the requested flag.
	FlagKey string
	// Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
	Context *structpb.Struct
}

func (b0 ResolveFloatRequest_builder) Build() *ResolveFloatRequest {
	m0 := &ResolveFloatRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FlagKey = b.FlagKey
	x.xxx_hidden_Context = b.Context
	return m0
}

// Response body for float flag evaluation. used by the ResolveFloat rpc.
type ResolveFloatResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Value    float64                `protobuf:"fixed64,1,opt,name=value,proto3"`
	xxx_hidden_Reason   string                 `protobuf:"bytes,2,opt,name=reason,proto3"`
	xxx_hidden_Variant  string                 `protobuf:"bytes,3,opt,name=variant,proto3"`
	xxx_hidden_Metadata *structpb.Struct       `protobuf:"bytes,4,opt,name=metadata,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ResolveFloatResponse) Reset() {
	*x = ResolveFloatResponse{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveFloatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveFloatResponse) ProtoMessage() {}

func (x *ResolveFloatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveFloatResponse) GetValue() float64 {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return 0
}

func (x *ResolveFloatResponse) GetReason() string {
	if x != nil {
		return x.xxx_hidden_Reason
	}
	return ""
}

func (x *ResolveFloatResponse) GetVariant() string {
	if x != nil {
		return x.xxx_hidden_Variant
	}
	return ""
}

func (x *ResolveFloatResponse) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ResolveFloatResponse) SetValue(v float64) {
	x.xxx_hidden_Value = v
}

func (x *ResolveFloatResponse) SetReason(v string) {
	x.xxx_hidden_Reason = v
}

func (x *ResolveFloatResponse) SetVariant(v string) {
	x.xxx_hidden_Variant = v
}

func (x *ResolveFloatResponse) SetMetadata(v *structpb.Struct) {
	x.xxx_hidden_Metadata = v
}

func (x *ResolveFloatResponse) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ResolveFloatResponse) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ResolveFloatResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The response value of the float flag evaluation, will be empty in the case of error.
	Value float64
	// The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
	Reason string
	// The variant name of the returned flag value.
	Variant string
	// Metadata for this evaluation
	Metadata *structpb.Struct
}

func (b0 ResolveFloatResponse_builder) Build() *ResolveFloatResponse {
	m0 := &ResolveFloatResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Value = b.Value
	x.xxx_hidden_Reason = b.Reason
	x.xxx_hidden_Variant = b.Variant
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Request body for int flag evaluation, used by the ResolveInt rpc.
type ResolveIntRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FlagKey string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3"`
	xxx_hidden_Context *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResolveIntRequest) Reset() {
	*x = ResolveIntRequest{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveIntRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveIntRequest) ProtoMessage() {}

func (x *ResolveIntRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveIntRequest) GetFlagKey() string {
	if x != nil {
		return x.xxx_hidden_FlagKey
	}
	return ""
}

func (x *ResolveIntRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Context
	}
	return nil
}

func (x *ResolveIntRequest) SetFlagKey(v string) {
	x.xxx_hidden_FlagKey = v
}

func (x *ResolveIntRequest) SetContext(v *structpb.Struct) {
	x.xxx_hidden_Context = v
}

func (x *ResolveIntRequest) HasContext() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Context != nil
}

func (x *ResolveIntRequest) ClearContext() {
	x.xxx_hidden_Context = nil
}

type ResolveIntRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Flag key of the requested flag.
	FlagKey string
	// Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
	Context *structpb.Struct
}

func (b0 ResolveIntRequest_builder) Build() *ResolveIntRequest {
	m0 := &ResolveIntRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FlagKey = b.FlagKey
	x.xxx_hidden_Context = b.Context
	return m0
}

// Response body for int flag evaluation. used by the ResolveInt rpc.
type ResolveIntResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Value    int64                  `protobuf:"varint,1,opt,name=value,proto3"`
	xxx_hidden_Reason   string                 `protobuf:"bytes,2,opt,name=reason,proto3"`
	xxx_hidden_Variant  string                 `protobuf:"bytes,3,opt,name=variant,proto3"`
	xxx_hidden_Metadata *structpb.Struct       `protobuf:"bytes,4,opt,name=metadata,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ResolveIntResponse) Reset() {
	*x = ResolveIntResponse{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveIntResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveIntResponse) ProtoMessage() {}

func (x *ResolveIntResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveIntResponse) GetValue() int64 {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return 0
}

func (x *ResolveIntResponse) GetReason() string {
	if x != nil {
		return x.xxx_hidden_Reason
	}
	return ""
}

func (x *ResolveIntResponse) GetVariant() string {
	if x != nil {
		return x.xxx_hidden_Variant
	}
	return ""
}

func (x *ResolveIntResponse) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ResolveIntResponse) SetValue(v int64) {
	x.xxx_hidden_Value = v
}

func (x *ResolveIntResponse) SetReason(v string) {
	x.xxx_hidden_Reason = v
}

func (x *ResolveIntResponse) SetVariant(v string) {
	x.xxx_hidden_Variant = v
}

func (x *ResolveIntResponse) SetMetadata(v *structpb.Struct) {
	x.xxx_hidden_Metadata = v
}

func (x *ResolveIntResponse) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ResolveIntResponse) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ResolveIntResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The response value of the int flag evaluation, will be unset in the case of error.
	Value int64
	// The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
	Reason string
	// The variant name of the returned flag value.
	Variant string
	// Metadata for this evaluation
	Metadata *structpb.Struct
}

func (b0 ResolveIntResponse_builder) Build() *ResolveIntResponse {
	m0 := &ResolveIntResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Value = b.Value
	x.xxx_hidden_Reason = b.Reason
	x.xxx_hidden_Variant = b.Variant
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Request body for object flag evaluation, used by the ResolveObject rpc.
type ResolveObjectRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FlagKey string                 `protobuf:"bytes,1,opt,name=flag_key,json=flagKey,proto3"`
	xxx_hidden_Context *structpb.Struct       `protobuf:"bytes,2,opt,name=context,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResolveObjectRequest) Reset() {
	*x = ResolveObjectRequest{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveObjectRequest) ProtoMessage() {}

func (x *ResolveObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveObjectRequest) GetFlagKey() string {
	if x != nil {
		return x.xxx_hidden_FlagKey
	}
	return ""
}

func (x *ResolveObjectRequest) GetContext() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Context
	}
	return nil
}

func (x *ResolveObjectRequest) SetFlagKey(v string) {
	x.xxx_hidden_FlagKey = v
}

func (x *ResolveObjectRequest) SetContext(v *structpb.Struct) {
	x.xxx_hidden_Context = v
}

func (x *ResolveObjectRequest) HasContext() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Context != nil
}

func (x *ResolveObjectRequest) ClearContext() {
	x.xxx_hidden_Context = nil
}

type ResolveObjectRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Flag key of the requested flag.
	FlagKey string
	// Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
	Context *structpb.Struct
}

func (b0 ResolveObjectRequest_builder) Build() *ResolveObjectRequest {
	m0 := &ResolveObjectRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_FlagKey = b.FlagKey
	x.xxx_hidden_Context = b.Context
	return m0
}

// Response body for object flag evaluation. used by the ResolveObject rpc.
type ResolveObjectResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Value    *structpb.Struct       `protobuf:"bytes,1,opt,name=value,proto3"`
	xxx_hidden_Reason   string                 `protobuf:"bytes,2,opt,name=reason,proto3"`
	xxx_hidden_Variant  string                 `protobuf:"bytes,3,opt,name=variant,proto3"`
	xxx_hidden_Metadata *structpb.Struct       `protobuf:"bytes,4,opt,name=metadata,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ResolveObjectResponse) Reset() {
	*x = ResolveObjectResponse{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveObjectResponse) ProtoMessage() {}

func (x *ResolveObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResolveObjectResponse) GetValue() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *ResolveObjectResponse) GetReason() string {
	if x != nil {
		return x.xxx_hidden_Reason
	}
	return ""
}

func (x *ResolveObjectResponse) GetVariant() string {
	if x != nil {
		return x.xxx_hidden_Variant
	}
	return ""
}

func (x *ResolveObjectResponse) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ResolveObjectResponse) SetValue(v *structpb.Struct) {
	x.xxx_hidden_Value = v
}

func (x *ResolveObjectResponse) SetReason(v string) {
	x.xxx_hidden_Reason = v
}

func (x *ResolveObjectResponse) SetVariant(v string) {
	x.xxx_hidden_Variant = v
}

func (x *ResolveObjectResponse) SetMetadata(v *structpb.Struct) {
	x.xxx_hidden_Metadata = v
}

func (x *ResolveObjectResponse) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *ResolveObjectResponse) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ResolveObjectResponse) ClearValue() {
	x.xxx_hidden_Value = nil
}

func (x *ResolveObjectResponse) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ResolveObjectResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The response value of the object flag evaluation, will be unset in the case of error.
	//
	// NOTE: This structure will need to be decoded from google/protobuf/struct.proto before it is returned to the SDK
	Value *structpb.Struct
	// The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
	Reason string
	// The variant name of the returned flag value.
	Variant string
	// Metadata for this evaluation
	Metadata *structpb.Struct
}

func (b0 ResolveObjectResponse_builder) Build() *ResolveObjectResponse {
	m0 := &ResolveObjectResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Value = b.Value
	x.xxx_hidden_Reason = b.Reason
	x.xxx_hidden_Variant = b.Variant
	x.xxx_hidden_Metadata = b.Metadata
	return m0
}

// Response body for the EventStream stream response
type EventStreamResponse struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type string                 `protobuf:"bytes,1,opt,name=type,proto3"`
	xxx_hidden_Data *structpb.Struct       `protobuf:"bytes,2,opt,name=data,proto3"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EventStreamResponse) Reset() {
	*x = EventStreamResponse{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamResponse) ProtoMessage() {}

func (x *EventStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EventStreamResponse) GetType() string {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return ""
}

func (x *EventStreamResponse) GetData() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_Data
	}
	return nil
}

func (x *EventStreamResponse) SetType(v string) {
	x.xxx_hidden_Type = v
}

func (x *EventStreamResponse) SetData(v *structpb.Struct) {
	x.xxx_hidden_Data = v
}

func (x *EventStreamResponse) HasData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data != nil
}

func (x *EventStreamResponse) ClearData() {
	x.xxx_hidden_Data = nil
}

type EventStreamResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// String key indicating the type of event that is being received, for example, provider_ready or configuration_change
	Type string
	// Object structure for use when sending relevant metadata to provide context to the event.
	// Can be left unset when it is not required.
	Data *structpb.Struct
}

func (b0 EventStreamResponse_builder) Build() *EventStreamResponse {
	m0 := &EventStreamResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Data = b.Data
	return m0
}

// Empty stream request body
type EventStreamRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventStreamRequest) Reset() {
	*x = EventStreamRequest{}
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStreamRequest) ProtoMessage() {}

func (x *EventStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flagd_evaluation_v1_evaluation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type EventStreamRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 EventStreamRequest_builder) Build() *EventStreamRequest {
	m0 := &EventStreamRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

var File_flagd_evaluation_v1_evaluation_proto protoreflect.FileDescriptor

var file_flagd_evaluation_v1_evaluation_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x22, 0xeb, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x56, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x79,
	0x46, 0x6c, 0x61, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xa2, 0x02, 0x0a, 0x07, 0x41, 0x6e, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23,
	0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x65, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x42,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x6c, 0x61, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x33,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x64, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x6c, 0x61, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x6c, 0x61, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x63, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c, 0x61, 0x67, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x4b,
	0x65, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x11, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x91,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x33, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x64, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c,
	0x61, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c,
	0x61, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x14, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0xd9, 0x05, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6c, 0x6c,
	0x12, 0x26, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64,
	0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x2a, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x42,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x29, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x66,
	0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x28, 0x2e, 0x66, 0x6c, 0x61,
	0x67, 0x64, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5f, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x12,
	0x26, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x29, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x27, 0x2e, 0x66, 0x6c,
	0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x65, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x42, 0x8a, 0x02, 0x0a, 0x25, 0x64, 0x65, 0x76, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x57, 0x62, 0x75,
	0x66, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x2d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x66, 0x6c, 0x61, 0x67,
	0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x61, 0x67, 0x64, 0x2f, 0x65, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x76, 0x31, 0xaa, 0x02, 0x21, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x64, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x2e, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0x02, 0x32, 0x4f, 0x70, 0x65, 0x6e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x5c, 0x46, 0x6c, 0x61, 0x67, 0x64, 0x5c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5c, 0x47,
	0x72, 0x70, 0x63, 0x5c, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xea, 0x02,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x3a, 0x3a, 0x46, 0x6c,
	0x61, 0x67, 0x64, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x47,
	0x72, 0x70, 0x63, 0x3a, 0x3a, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_flagd_evaluation_v1_evaluation_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_flagd_evaluation_v1_evaluation_proto_goTypes = []any{
	(*ResolveAllRequest)(nil),      // 0: flagd.evaluation.v1.ResolveAllRequest
	(*ResolveAllResponse)(nil),     // 1: flagd.evaluation.v1.ResolveAllResponse
	(*AnyFlag)(nil),                // 2: flagd.evaluation.v1.AnyFlag
	(*ResolveBooleanRequest)(nil),  // 3: flagd.evaluation.v1.ResolveBooleanRequest
	(*ResolveBooleanResponse)(nil), // 4: flagd.evaluation.v1.ResolveBooleanResponse
	(*ResolveStringRequest)(nil),   // 5: flagd.evaluation.v1.ResolveStringRequest
	(*ResolveStringResponse)(nil),  // 6: flagd.evaluation.v1.ResolveStringResponse
	(*ResolveFloatRequest)(nil),    // 7: flagd.evaluation.v1.ResolveFloatRequest
	(*ResolveFloatResponse)(nil),   // 8: flagd.evaluation.v1.ResolveFloatResponse
	(*ResolveIntRequest)(nil),      // 9: flagd.evaluation.v1.ResolveIntRequest
	(*ResolveIntResponse)(nil),     // 10: flagd.evaluation.v1.ResolveIntResponse
	(*ResolveObjectRequest)(nil),   // 11: flagd.evaluation.v1.ResolveObjectRequest
	(*ResolveObjectResponse)(nil),  // 12: flagd.evaluation.v1.ResolveObjectResponse
	(*EventStreamResponse)(nil),    // 13: flagd.evaluation.v1.EventStreamResponse
	(*EventStreamRequest)(nil),     // 14: flagd.evaluation.v1.EventStreamRequest
	nil,                            // 15: flagd.evaluation.v1.ResolveAllResponse.FlagsEntry
	(*structpb.Struct)(nil),        // 16: google.protobuf.Struct
}
var file_flagd_evaluation_v1_evaluation_proto_depIdxs = []int32{
	16, // 0: flagd.evaluation.v1.ResolveAllRequest.context:type_name -> google.protobuf.Struct
	15, // 1: flagd.evaluation.v1.ResolveAllResponse.flags:type_name -> flagd.evaluation.v1.ResolveAllResponse.FlagsEntry
	16, // 2: flagd.evaluation.v1.ResolveAllResponse.metadata:type_name -> google.protobuf.Struct
	16, // 3: flagd.evaluation.v1.AnyFlag.object_value:type_name -> google.protobuf.Struct
	16, // 4: flagd.evaluation.v1.AnyFlag.metadata:type_name -> google.protobuf.Struct
	16, // 5: flagd.evaluation.v1.ResolveBooleanRequest.context:type_name -> google.protobuf.Struct
	16, // 6: flagd.evaluation.v1.ResolveBooleanResponse.metadata:type_name -> google.protobuf.Struct
	16, // 7: flagd.evaluation.v1.ResolveStringRequest.context:type_name -> google.protobuf.Struct
	16, // 8: flagd.evaluation.v1.ResolveStringResponse.metadata:type_name -> google.protobuf.Struct
	16, // 9: flagd.evaluation.v1.ResolveFloatRequest.context:type_name -> google.protobuf.Struct
	16, // 10: flagd.evaluation.v1.ResolveFloatResponse.metadata:type_name -> google.protobuf.Struct
	16, // 11: flagd.evaluation.v1.ResolveIntRequest.context:type_name -> google.protobuf.Struct
	16, // 12: flagd.evaluation.v1.ResolveIntResponse.metadata:type_name -> google.protobuf.Struct
	16, // 13: flagd.evaluation.v1.ResolveObjectRequest.context:type_name -> google.protobuf.Struct
	16, // 14: flagd.evaluation.v1.ResolveObjectResponse.value:type_name -> google.protobuf.Struct
	16, // 15: flagd.evaluation.v1.ResolveObjectResponse.metadata:type_name -> google.protobuf.Struct
	16, // 16: flagd.evaluation.v1.EventStreamResponse.data:type_name -> google.protobuf.Struct
	2,  // 17: flagd.evaluation.v1.ResolveAllResponse.FlagsEntry.value:type_name -> flagd.evaluation.v1.AnyFlag
	0,  // 18: flagd.evaluation.v1.Service.ResolveAll:input_type -> flagd.evaluation.v1.ResolveAllRequest
	3,  // 19: flagd.evaluation.v1.Service.ResolveBoolean:input_type -> flagd.evaluation.v1.ResolveBooleanRequest
	5,  // 20: flagd.evaluation.v1.Service.ResolveString:input_type -> flagd.evaluation.v1.ResolveStringRequest
	7,  // 21: flagd.evaluation.v1.Service.ResolveFloat:input_type -> flagd.evaluation.v1.ResolveFloatRequest
	9,  // 22: flagd.evaluation.v1.Service.ResolveInt:input_type -> flagd.evaluation.v1.ResolveIntRequest
	11, // 23: flagd.evaluation.v1.Service.ResolveObject:input_type -> flagd.evaluation.v1.ResolveObjectRequest
	14, // 24: flagd.evaluation.v1.Service.EventStream:input_type -> flagd.evaluation.v1.EventStreamRequest
	1,  // 25: flagd.evaluation.v1.Service.ResolveAll:output_type -> flagd.evaluation.v1.ResolveAllResponse
	4,  // 26: flagd.evaluation.v1.Service.ResolveBoolean:output_type -> flagd.evaluation.v1.ResolveBooleanResponse
	6,  // 27: flagd.evaluation.v1.Service.ResolveString:output_type -> flagd.evaluation.v1.ResolveStringResponse
	8,  // 28: flagd.evaluation.v1.Service.ResolveFloat:output_type -> flagd.evaluation.v1.ResolveFloatResponse
	10, // 29: flagd.evaluation.v1.Service.ResolveInt:output_type -> flagd.evaluation.v1.ResolveIntResponse
	12, // 30: flagd.evaluation.v1.Service.ResolveObject:output_type -> flagd.evaluation.v1.ResolveObjectResponse
	13, // 31: flagd.evaluation.v1.Service.EventStream:output_type -> flagd.evaluation.v1.EventStreamResponse
	25, // [25:32] is the sub-list for method output_type
	18, // [18:25] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_flagd_evaluation_v1_evaluation_proto_init() }
func file_flagd_evaluation_v1_evaluation_proto_init() {
	if File_flagd_evaluation_v1_evaluation_proto != nil {
		return
	}
	file_flagd_evaluation_v1_evaluation_proto_msgTypes[2].OneofWrappers = []any{
		(*anyFlag_BoolValue)(nil),
		(*anyFlag_StringValue)(nil),
		(*anyFlag_DoubleValue)(nil),
		(*anyFlag_ObjectValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_flagd_evaluation_v1_evaluation_proto_rawDesc), len(file_flagd_evaluation_v1_evaluation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flagd_evaluation_v1_evaluation_proto_goTypes,
		DependencyIndexes: file_flagd_evaluation_v1_evaluation_proto_depIdxs,
		MessageInfos:      file_flagd_evaluation_v1_evaluation_proto_msgTypes,
	}.Build()
	File_flagd_evaluation_v1_evaluation_proto = out.File
	file_flagd_evaluation_v1_evaluation_proto_goTypes = nil
	file_flagd_evaluation_v1_evaluation_proto_depIdxs = nil
}
